#!/lustre1/zeminz_pkuhpc/01.bin/perl-5.24/bin/perl
use strict;
use warnings;
use Getopt::Long;
#use Data::Dumper;

my $usage = "Usage:  perl  $0  --min_a 0  --min_b 0   <Pair>   >Out\n";
my ($min_a, $min_b) = (0, 0);
GetOptions( 
	"min_a:i" => \$min_a, 
	"min_b:i" => \$min_b
);

die $usage if @ARGV  !=1;


### Data Structure
# %cell2pair   ->  cellID   ->  'pairID' ->  PairID
#                           ->  'count'  ->  count
#
# %TOPpair     ->  patient  ->  PairID    -> 'CDR3.AB'
#                                         -> 'VDJtype'
#                                         -> 'Cells'   ->   CellID (use only key)

### read 'panC.VDJpair.txt' which generated by 'vdj2pair.pl'
my %TOPpair = ();
my %cell2pair = ();
open INV, $ARGV[0];
while (<INV>){
	#  0       1        2        3       4          5        6
	# pairID  CDR3.AB  VDJtype  cellID  patientID  nUMI.A   nUMI.B
	next if $.==1;
	chomp;
	my @t = split /\s+/;
	next unless ($t[5]>=$min_a && $t[6]>=$min_b);
	if (!exists $cell2pair{$t[3]} ){
		$cell2pair{$t[3]}{'pairID'} = $t[0];
		$cell2pair{$t[3]}{'count'}  = $t[5] + $t[6];
		##
		$TOPpair{$t[4]}{$t[0]}{'CDR3.AB'} = $t[1];
		$TOPpair{$t[4]}{$t[0]}{'VDJtype'} = $t[2];
		$TOPpair{$t[4]}{$t[0]}{'Cells'}{$t[3]} = 1;
	}elsif($cell2pair{$t[3]}{'count'} < $t[5] + $t[6] ){
		## delete the old
		my $oldPID = $cell2pair{$t[3]}{'pairID'};
		delete $TOPpair{$t[4]}{$oldPID}{'Cells'}{$t[3]};
		## save the new
		$cell2pair{$t[3]}{'pairID'} = $t[0];
		$cell2pair{$t[3]}{'count'}  = $t[5] + $t[6];
		##
		$TOPpair{$t[4]}{$t[0]}{'CDR3.AB'} = $t[1];
		$TOPpair{$t[4]}{$t[0]}{'VDJtype'} = $t[2];
		$TOPpair{$t[4]}{$t[0]}{'Cells'}{$t[3]} = 1;
	}
}
close INV;
#print Dumper \%TOPpair; exit;


#### assign clone and Output
print "cloneID\tcloneType\tVDJtype\tpairIDs\tCDR3.ABs\tFreqs\tCells\n";
foreach my $patient( sort keys %TOPpair ){
	my $clone_count = 0;
	foreach my $PairID (sort keys %{$TOPpair{$patient}}){
		my $CDR3AB = $TOPpair{$patient}{$PairID}{'CDR3.AB'};
		my $VDJtype = $TOPpair{$patient}{$PairID}{'VDJtype'};
		my @cells = sort keys %{$TOPpair{$patient}{$PairID}{'Cells'}};
		my $freq = @cells;
		next unless @cells>0;
		## good
		$clone_count++;
		my $cloneSize = @cells;
		my $cloneID = sprintf("%s_C%.6d", $patient, $clone_count);
		#my $cloneID = "$patient+$PairID";
		my $cloneType = $cloneSize > 1 ? "Clonal": "NonClonal";
		## out
		$cloneID = "$cloneID:$cloneSize";
		print "$cloneID\t$cloneType\t$VDJtype\t$PairID\t$CDR3AB\t$freq\t" . join(",",@cells) . "\n";
	}
}
