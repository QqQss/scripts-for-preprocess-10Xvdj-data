#!/lustre1/zeminz_pkuhpc/01.bin/perl-5.24/bin/perl
use strict;
use warnings;
use Data::Dumper;

my $usage = "Usage:  perl  $0  <VDJ.format>   <Clone>  >Out\n";
die $usage if @ARGV  !=2;

###  panC.VDJclone.txt   generated by pair2clone.pl
my %cell2clone = ();
open INC, $ARGV[1];
while (<INC>){
	# 0        1          2        3        4          5       6
	#cloneID  cloneType  VDJtype  pairIDs  CDR3.ABs   Freqs   Cells
	next if $. ==1;
	chomp;
	my @t = split /\t/;
	my @cells = split /,/, $t[6];
	foreach my $this_cell (@cells){
		$cell2clone{$this_cell}{'cloneID'} = $t[0];
		$cell2clone{$this_cell}{'cloneType'} = $t[1];
	}
}
close INC;


###  panC.vdj.format.txt  generated by 10x_vdj_format.pl
open INV, $ARGV[0];
while (<INV>){
	# 0      1         2       3       4               5        6        7               8        9        10              11       12       13              14       15
	#cellID patientID libID   VDJtype Identifier.A1   CDR3.A1  nUMI.A1  Identifier.A2   CDR3.A2  nUMI.A2  Identifier.B1   CDR3.B1  nUMI.B1  Identifier.B2   CDR3.B2  nUMI.B2
	chomp;
	if ($.==1){
		print "$_\tcloneID\tcloneType\n";
		next;
	}
	my @t = split /\t/;
	my $out2 = "-\t-";
	if (exists $cell2clone{$t[0]}){
		$out2 = "$cell2clone{$t[0]}{'cloneID'}\t$cell2clone{$t[0]}{'cloneType'}";
	}
	print "$_\t$out2\n";
}
close INV;



